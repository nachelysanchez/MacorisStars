@layout Layout.Authentication
@page "/login"
@inject NavigationManager navManager
@inject IUsuariosService _usService;
@rendermode InteractiveServer


<div class="container">
    <div class="container-img">
        <img src="LogoSinFondo.png" />
    </div>
    <div class="form-container">

        <div class="container-inputs">
            <form>

                <div class="nombreUsuario">
                    <label>Nombre de Usuario</label>
                    <input type="text" @bind="user.NombreUsuario" />
                </div>
                <div class="pass-cont">
                    <label>Contraseña</label>
                    <input type="password" @bind="user.Contrasena" />
                </div>
                <label>@mensaje</label>
                <div class="btn-cont">
                    <input type="button" @onclick="LoginAction" value="INICIAR SESION" />
                </div>
            </form>
        </div>
        <div class="p-registrarse">
            <label>¿NO TIENES UNA CUENTA? </label>
            <strong @onclick="Register"> REGISTRATE</strong>
        </div>
    </div>
</div>

@code {
    public Usuarios user { get; set; } = new();
    private string mensaje = "";
    private void Register()
    {
        navManager.NavigateTo("/registrarse");
    }

    protected override Task OnInitializedAsync()
    {
        var usuario = _usService.GetUsuarioLogueado();
        if(usuario != null)
        {
            _usService.CerrarSesion();
        }
        return base.OnInitializedAsync();
    }

    private async Task LoginAction()
    {
        user = await _usService.Login(user.NombreUsuario, user.Contrasena);
        if (user != null)
        {

            navManager.NavigateTo("/cSupermercados");
        }
        else
        {
            this.OnInitialized();
            mensaje = "Correo o contraseña incorrecta";
        }
    }
}
